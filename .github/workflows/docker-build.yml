name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  IMAGE_NAME: jensheidrich76/megacmd-debian-docker

jobs:
  build-arm64:
    name: Build arm64 Image
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push arm64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:arm64
          target: final
          provenance: false

  build-amd64:
    name: Build x64 Image
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push x64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE_NAME }}:amd64
          target: final
          provenance: false

  create-manifest:
    name: Create Multi-Arch Manifest
    runs-on: ubuntu-24.04
    needs: [build-arm64, build-amd64]
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract tag or use 'latest'
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }} \
            --amend ${{ env.IMAGE_NAME }}:amd64 \
            --amend ${{ env.IMAGE_NAME }}:arm64
          docker manifest push ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }}
